{"version":3,"file":"js/contact.93d75e00.js","mappings":"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","sources":["webpack://portfolio-src/./src/views/ContactView.vue","webpack://portfolio-src/./node_modules/emailjs-com/es/store/store.js","webpack://portfolio-src/./node_modules/emailjs-com/es/methods/init/init.js","webpack://portfolio-src/./node_modules/emailjs-com/es/utils/validateParams.js","webpack://portfolio-src/./node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","webpack://portfolio-src/./node_modules/emailjs-com/es/api/sendPost.js","webpack://portfolio-src/./node_modules/emailjs-com/es/methods/send/send.js","webpack://portfolio-src/./node_modules/emailjs-com/es/methods/sendForm/sendForm.js","webpack://portfolio-src/./node_modules/emailjs-com/es/index.js","webpack://portfolio-src/./src/views/ContactView.vue?405e"],"sourcesContent":["<template>\r\n  <div class=\"contact\">\r\n    <!-- Wrapper container -->\r\n    <div class=\"container py-4\">\r\n        <!-- Bootstrap 5 starter form -->\r\n        <form ref=\"form\" id=\"contactForm\" @submit.prevent=\"sendEmail\">\r\n\r\n            <!-- Name input -->\r\n            <div class=\"mb-3\">\r\n            <label class=\"form-label\" for=\"name\">Name</label>\r\n            <input class=\"form-control\" id=\"name\" type=\"text\" placeholder=\"Name\" name=\"user_name\"/>\r\n            </div>\r\n\r\n            <!-- Email address input -->\r\n            <div class=\"mb-3\">\r\n            <label class=\"form-label\" for=\"emailAddress\">Email Address</label>\r\n            <input class=\"form-control\" id=\"emailAddress\" type=\"email\" placeholder=\"Email Address\" name=\"user_email\"/>\r\n            </div>\r\n\r\n            <!-- Message input -->\r\n            <div class=\"mb-3\">\r\n            <label class=\"form-label\" for=\"message\">Message</label>\r\n            <textarea name=\"message\" class=\"form-control\" id=\"message\" type=\"text\" placeholder=\"Message\" style=\"height: 10rem;\"></textarea>\r\n            </div>\r\n\r\n            <!-- Form submit button -->\r\n            <div class=\"d-grid\">\r\n            <button class=\"btn btn-primary btn-lg\" type=\"submit\">Send</button>\r\n            </div>\r\n\r\n        </form>\r\n        </div>\r\n        <div>\r\n            <a href=\"https://www.linkedin.com/in/ben-schulzke-2a4086283\" target=\"_blank\">LinkedIn</a>\r\n            <br/>\r\n            <a href=\"mailto:benschulzke@gmail.com\" target=\"_blank\">benschulzke@gmail.com</a>\r\n            <br/>\r\n            <a href=\"https://github.com/bschulzke\" target=\"_blank\">GitHub</a>\r\n        </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport emailjs from 'emailjs-com';\r\nexport default {\r\n      name: 'ContactMe',\r\n  data() {\r\n    return {\r\n      name: '',\r\n      email: '',\r\n      message: ''\r\n    }\r\n  },\r\n methods: {\r\n    sendEmail() {\r\n      emailjs.sendForm('service_8ttm8yk', 'template_3sti73b', this.$refs.form, '99wZUEga7zsJwe-6X')\r\n        .then((result) => {\r\n            console.log('SUCCESS!', result.text);\r\n        }, (error) => {\r\n            console.log('FAILED...', error.text);\r\n        });\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.contact {\r\n    margin-top: 6rem;\r\n}\r\n.container {\r\n    max-width: 50rem;\r\n}\r\n.btn {\r\n    background-color: rgb(9,91,118);\r\n}\r\na {\r\n  color: #09b5bb;\r\n}\r\n</style>","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { render } from \"./ContactView.vue?vue&type=template&id=d57aef82&scoped=true\"\nimport script from \"./ContactView.vue?vue&type=script&lang=js\"\nexport * from \"./ContactView.vue?vue&type=script&lang=js\"\n\nimport \"./ContactView.vue?vue&type=style&index=0&id=d57aef82&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d57aef82\"]])\n\nexport default __exports__"],"names":["class","_hoisted_3","_createElementVNode","href","target","_createElementBlock","_hoisted_1","_hoisted_2","ref","id","onSubmit","_cache","_withModifiers","args","$options","sendEmail","_hoisted_8","store","_origin","init","userID","origin","_userID","validateParams","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","findHTMLForm","form","currentForm","document","querySelector","nodeName","sendForm","formData","FormData","append","name","email","message","methods","emailjs","$refs","then","result","console","log","error","__exports__","render"],"sourceRoot":""}